<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>979</width>
    <height>839</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget
{
	background-color: rgb(80, 80, 80);
}

QLabel
{
	color: rgb(200, 200, 200);
}

QLineEdit
{
	background-color: rgb(40, 40, 40);
	selection-background-color: rgb(0, 180, 250);
	selection-color: rgb(40, 40, 40);
	color: rgb(200, 200, 200);
	border: 1px solid rgb(200, 200, 200);
}

QLineEdit:read-only
{
	background-color: rgb(80, 80, 80);
}

QMainWindow::separator
{
	background: rgb(80, 80, 80);
}

QMainWindow::separator:vertical
{
	width: 2px;
}

QMainWindow::separator:horizontal
{
	height: 2px;
}

QMainWindow::separator:hover
{
	background: rgb(200, 200, 200);
}

QMenuBar
{
	background: rgb(255, 255, 255);
}

QMenuBar::item
{
	background: rgb(255, 255, 255);
	color: rgb(40, 40, 40);
}

QMenuBar::item:selected
{
	background: rgb(0, 180, 250);
	color: rgb(40, 40, 80);
}

QMenuBar::item:pressed
{
	background: rgb(0, 180, 250);
	color: rgb(40, 40, 80);
}

QMenu
{
	background: rgb(40, 40, 40);
	margin: 0px;
}

QMenu::separator
{
	background: rgb(200, 200, 200);
	height: 1px;
	margin-left: 5px;
	margin-right: 5px;
}

QMenu::item
{
	background: rgb(40, 40, 40);
	color: rgb(200, 200, 200);
}

QMenu::item:selected
{
	background: rgb(0, 180, 250);
	color: rgb(40, 40, 80);
}

QMenu::item:pressed
{
	background: rgb(0, 180, 250);
	color: rgb(40, 40, 80);
}

QDockWidget
{
	color: rgb(200, 200, 200);
}

QDockWidget::title
{
	background:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
													stop: 0 rgb(100, 100, 100),
													stop: 1.0 rgb(80, 80, 80));
	text-align: center;
}

QTabBar
{
	background: rgb(40, 40, 40);
}

QTabBar::tab:top, QTabBar::tab:bottom
{
	background: transparent;
	color: rgb(200, 200, 200);
	min-width: 20ex;
	min-height: 5ex;
}

QTabBar::tab:top:selected, QTabBar::tab:top:selected
{
	border-left: 1px solid rgb(200, 200, 200);
	border-right: 1px solid rgb(200, 200, 200);
}

QTabBar::tab:top:selected
{
	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
													stop: 0 rgb(100, 100, 100),
													stop: 1.0 rgb(80, 80, 80));
	border-top: 1px solid rgb(200, 200, 200);
	border-top-left-radius: 4px;
	border-top-right-radius: 4px;
}

QTabBar::tab:bottom:selected
{
	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
													stop: 0 rgb(80, 80, 80),
													stop: 1.0 rgb(100, 100, 100));
	border-bottom: 1px solid rgb(200, 200, 200);
	border-bottom-left-radius: 4px;
	border-bottom-right-radius: 4px;
}

QToolBar
{
	background: rgb(40, 40, 40);
	border-top: 1px solid rgb(80, 80, 80);
}

QToolBar::separator:horizontal
{
	background: rgb(200, 200, 200);
	width: 1px;
	margin-top: 2px;
	margin-bottom: 2px;
}

QToolBar::separator:vertical
{
	background: rgb(200, 200, 200);
	height: 1px;
	margin-left: 2px;
	margin-right: 2px;
}

QToolButton
{
	background: transparent;
	color: rgb(200, 200, 200);
}

QToolButton:hover
{
	background: rgb(0, 180, 250);
	color: rgb(40, 40, 80);
}

QListView, QTreeView
{
	background: rgb(80, 80, 80);
	color: rgb(200, 200, 200);
	margin: 0 0 0 0;
}

QListView::item, QTreeView:item
{
	background: rgb(80, 80, 80);
	color: rgb(200, 200, 200);
}

QListView::item:hover, QListView::item:selected,
QTreeView::item:hover, QTreeView::item:selected
{
	background: rgb(0, 180, 250);
	color: rgb(40, 40, 80);
}

QComboBox, QPushButton
{
	background:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
													stop: 0 rgb(100, 100, 100),
													stop: 1.0 rgb(80, 80, 80));
	color: rgb(200, 200, 200);
	border: 1px solid rgb(200, 200, 200);
	border-radius: 4px;
	text-align: center;
}

QComboBox:hover, QPushButton:hover
{
	background:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
													stop: 0 rgb(110, 110, 110),
													stop: 1.0 rgb(90, 90, 90));
}

QComboBox:pressed, QPushButton:pressed
{
	background:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
													stop: 0 rgb(80, 80, 80),
													stop: 1.0 rgb(40, 40, 40));
}

QPushButton:flat
{
	border: none;
	border-radius: 0px;
	background:   rgb(80, 80, 80);
}

QPushButton:checked
{
	background:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
													stop: 0 rgb(0, 180, 250),
													stop: 1.0 rgb(0, 90, 125));
}

QPushButton:flat, checked
{
	border: none;
	border-radius: 0px;
	background:   rgb(80, 80, 80);
}

QPushButton:default
{
	border-color:  rgb(0, 180, 250);
}

QComboBox::drop-down
{
	background:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
													stop: 0 rgb(100, 100, 100),
													stop: 1.0 rgb(80, 80, 80));
	border-radius: 4px;
}

QComboBox QAbstractItemView
{
	background: rgb(40, 40, 40);
	color: rgb(200, 200, 200);
	selection-background-color: rgb(80, 80, 80);
	selection-color: rgb(200, 200, 200);
}</string>
  </property>
  <widget class="QWidget" name="widget" native="true">
   <property name="geometry">
    <rect>
     <x>430</x>
     <y>40</y>
     <width>331</width>
     <height>761</height>
    </rect>
   </property>
   <layout class="QVBoxLayout" name="verticalLayout_2">
    <item>
     <widget class="QWidget" name="ComponentWidget" native="true">
      <layout class="QVBoxLayout" name="verticalLayout">
       <property name="spacing">
        <number>0</number>
       </property>
       <property name="leftMargin">
        <number>0</number>
       </property>
       <property name="topMargin">
        <number>0</number>
       </property>
       <property name="rightMargin">
        <number>0</number>
       </property>
       <property name="bottomMargin">
        <number>0</number>
       </property>
       <item>
        <widget class="QPushButton" name="Header">
         <property name="text">
          <string>Spacial</string>
         </property>
         <property name="icon">
          <iconset>
           <normaloff>../../../Users/Artem/Pictures/light-beams-halo-50.jpg</normaloff>../../../Users/Artem/Pictures/light-beams-halo-50.jpg</iconset>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
         <property name="checked">
          <bool>true</bool>
         </property>
         <property name="flat">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QWidget" name="Body" native="true">
         <layout class="QVBoxLayout" name="verticalLayout_4">
          <item>
           <widget class="QPushButton" name="pushButton_2">
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QPushButton" name="pushButton">
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QPushButton" name="pushButton_4">
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
    <item>
     <widget class="QWidget" name="ComponentWidget_2" native="true">
      <layout class="QVBoxLayout" name="verticalLayout_5">
       <property name="spacing">
        <number>0</number>
       </property>
       <property name="leftMargin">
        <number>0</number>
       </property>
       <property name="topMargin">
        <number>0</number>
       </property>
       <property name="rightMargin">
        <number>0</number>
       </property>
       <property name="bottomMargin">
        <number>0</number>
       </property>
       <item>
        <widget class="QPushButton" name="Header_3">
         <property name="text">
          <string>Mesh Filter</string>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
         <property name="checked">
          <bool>true</bool>
         </property>
         <property name="flat">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QWidget" name="Body_3" native="true">
         <layout class="QVBoxLayout" name="verticalLayout_6">
          <item>
           <widget class="QPushButton" name="pushButton_5">
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QPushButton" name="pushButton_6">
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QPushButton" name="pushButton_7">
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
    <item>
     <spacer name="verticalSpacer">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>40</height>
       </size>
      </property>
     </spacer>
    </item>
   </layout>
   <zorder>ComponentWidget</zorder>
   <zorder>verticalSpacer</zorder>
   <zorder>ComponentWidget_2</zorder>
  </widget>
  <widget class="QLabel" name="label">
   <property name="geometry">
    <rect>
     <x>140</x>
     <y>400</y>
     <width>221</width>
     <height>16</height>
    </rect>
   </property>
   <property name="frameShape">
    <enum>QFrame::NoFrame</enum>
   </property>
   <property name="text">
    <string>Trololo</string>
   </property>
  </widget>
 </widget>
 <resources/>
 <connections>
  <connection>
   <sender>Header</sender>
   <signal>clicked(bool)</signal>
   <receiver>Body</receiver>
   <slot>setVisible(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>240</x>
     <y>211</y>
    </hint>
    <hint type="destinationlabel">
     <x>240</x>
     <y>331</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>Header_3</sender>
   <signal>clicked(bool)</signal>
   <receiver>Body_3</receiver>
   <slot>setVisible(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>645</x>
     <y>188</y>
    </hint>
    <hint type="destinationlabel">
     <x>645</x>
     <y>249</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
